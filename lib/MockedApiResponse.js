var Chance = require('chance');
var chance = new Chance();

const possibleMilestones = ['Shiny90', 'Naomi', 'Data Prep']
const possibleTasks = ["Generate input data", "Go to Spectrum/AIM. Row 34", "Download data templates from ADR", "Populate Shiny90 survey template", "Populate Shiny90 HIV testing template?", "Populate the Population template", "Populate ANC survey template", "Populate ART template", "Populate Naomi survey template", "Populate geo template", "Create user account", "Request membership for the organization/country for which user will be developing estimates", "Request membership type from organization admin to allow user to upload and/or change data for the country", "Upload Shiny90 survey input file to ADR", "Upload Shiny90 HIV Testing template to ADR", "Upload Population input file to ADR", "Upload ANC input file to ADR", "Upload ART input file to ADR", "Upload Naomi survey input file to ADR", "Upload geography input file to ADR", "Correct file and re-upload file to ADR", "Find ADR key and enter it into ShinyRob field on home page", "Upload validated ANC, ART, and geo input files to ADR", "Select geographic, ART, and ANC data packages", "Correct ART input package file, re-upload file to ADR, and return to beginning of ShinyRob", "Correct ANC input package file, re-upload file to ADR, and return to beginning of ShinyRob", "Create user account on Spectrum/AIM", "Create file(s) from new or from previous file", "Update population estimates with UN population data, enter official country population data, or make ad hoc adjustments.", "Update PMTCT and breastfeeding data elements for current estimates year for each Spectrum file", "Update breastfeeding pattern in Spectrum for current estimates year", "Update ANC testing data elements for current estimates year for each Spectrum file", "Update adult ART data elements for current estimates year for each Spectrum file", "Update pediatric ART data elements for current estimates year for each Spectrum file", "Update knowledge of status data elements for current estimates year for each Spectrum file using one of other available options - Direct Entry of Case Reports, CSAVR, ECDC, Manual Entry", "Upload an existing working set into Shiny90.", "Produce a final, calibrated Spectrum file and download it to users computer", "Upload a final, calibrated Spectrum file to Shiny90", "Upload the correct final, calibrated Spectrum file to Shiny90", "Either download the Shiny90 survey file template and complete all required data points or choose one of the other options for estimating knowledge of status", "Upload the national HIV testing survey file in the format required by Shiny90", "Download the Shiny90 data template file from ADR and complete it for the current year and all previous years available", "Upload the HIV Testing programme data file in the format required by Shiny90", "Correct data errors in the Shiny90 HIV testing programme data file and reupload to Shiny90", "Ensure all three required files have been populated, validated, and uploaded to Shiny90.", "Run the Shiny90 model", "Determine underlying causes of poor outputs (e.g., survey data, programme data, Spectrum file), correct them and return to the beginning of Shiny90", "Click the \"Download Shiny90 Outputs for Spectrum” button and save the file in the user's preferred location", "Repeat all Shiny90 steps for each Spectrum file", "Redo all previous Spectrum steps and Shiny90 steps (or other method/model for estimating knowledge of status)", "Update knowledge of status data elements for current estimates year for each Spectrum file using one of available options - Direct Entry of Case Reports, Shiny90, CSAVR, ECDC, Manual Entry", "Update viral suppression data elements for current estimates year for each Spectrum file", "Recommend the user use recommended values for all Advanced Options or confirm options selected", "Estimate incidence using one of available options - EPP, AEM, CSAVR, ECDC, or direct input", "Select concentrated epidemic option (concentrated IDU or concentrated non-IDU), 'Restore default values' button. If using EPP or AEM, make sure the box 'Read sex ratio from EPP/AEM is checked'", "Restore default values for incidence ratios and fit the model either to fixed ratios or to survey data", "Return to beginning of Spectrum and repeat all steps - including knowledge of status models - for any Spectrum file which has changes in underlying data sets", "View and validate results using Spectrum visualizations for all Spectrum files", "Opened the prior year's file as read-only and compared it against the current year's results?", "Run Uncertainty Analysis for all Spectrum files?", "Investigate and correct any underlying dataset or alter other parameters (e.g., sex/age patterns) and complete all subsequent steps in Spectrum for each affected Spectrum file. If underlying datasets change, all Spectrum steps - including knowledge of status and incidence estimates - must be repeated", "Save all Spectrum files to a single location", "Merge diverse files into a single file", "Upload final, validated Spectrum file to ADR", "Save Spectrum file(s) and use in data pack, DMPPT, national reporting, or other needs.", "Contact Imperial College to create an account", "Create a current project in Naomi either by creating one from scratch or by using the \"copy-to\" function to create one from another file", "Either return to ADR tasks (recommended!) or upload validated data inputs to Naomi individually", "Upload final, valid Spectrum file, boundary file, and population file either by connecting to ADR or by uploading individual files to Naomi", "Upload valid, final programme and survey data files either by connecting to ADR or by uploading individual files to Naomi", "Select valid model options", "Fit the Naomi model", "Calibrate the Naomi model", "Review and validate Naomi model outputs", "Determine causes of any problems with model outputs and return to the appropriate task to correct them; repeating all subsequent tasks", "Download the Naomi results file", "Return to the task which has been updated (e.g., updated programme data file) and repeat all subsequent tasks", "Upload final, validated Naomi file to ADR", "Share final results files with UNAIDS", "Return to the relevant prior task to make corrections and repeat all subsequent tasks in the process", "Use final estimates results to prepare PEPFAR Data Pack, local reporting, GAM, and other planning and programme needs"];
const randomItemFromList = list =>
    list[chance.integer({ min: 0, max: list.length - 1 })]

export default function getMockedApiResponse() {
    const taskNumber = chance.integer({ min: 2, max: 85 });
    const title = randomItemFromList(possibleTasks);
    const html = (
        <>
            <h3>{title}</h3>
            <p>{chance.paragraph({ sentences: 3 })}</p>
            <ol>
                {[1, 2, 3, 4, 5].map(x =>
                    <li key={x}>{chance.paragraph({ sentences: 2 })}</li>
                )}
            </ol>
        </>
    );
    return {
        taskNumber,
        milestone: randomItemFromList(possibleMilestones),
        displayHtml: html,
        letsGoUrl: 'https://google.com',
        skippable: chance.bool(),
        percentage: taskNumber < 5 ? 5 : taskNumber,
        grey: chance.integer({ min: 0, max: 5 })
    };
}
